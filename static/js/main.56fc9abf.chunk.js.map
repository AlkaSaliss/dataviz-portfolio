{"version":3,"sources":["externalLibs/tsne.js","components/HomePage.js","components/resume/SkillBlock.js","components/resume/Skills.js","components/resume/Education.js","components/resume/Experience.js","components/resume/Resume.js","components/vision/DEmoClassi.js","components/vision/visionCharts/Axis.js","components/vision/visionCharts/Axes.js","components/vision/visionCharts/Bars.js","components/vision/visionCharts/BarChart.js","components/vision/Mnist.js","components/vision/VisionPage.js","components/scatterPlots/iris/2D/Axis.js","components/scatterPlots/iris/2D/Axes.js","components/scatterPlots/iris/2D/ScatterCircles.js","components/scatterPlots/iris/irisUtils.js","components/scatterPlots/iris/2D/IrisAnimated.js","components/scatterPlots/iris/3D/Scatter3D.js","components/scatterPlots/iris/3D/Iris3DAnimated.js","components/scatterPlots/iris/tSNE/IrisTsne.js","components/scatterPlots/ScatterPlotPage.js","components/nlp/PlaceHolder.js","components/nlp/NLPPage.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["lib","tsnejs","REVISION","global","assert","condition","message","getopt","opt","field","defaultval","hasOwnProperty","return_v","v_val","randn","mu","std","gaussRandom","u","Math","random","v","r","c","sqrt","log","zeros","n","isNaN","ArrayBuffer","arr","Array","i","Float64Array","randn2d","d","s","uses","x","xhere","j","push","L2","x1","x2","D","length","x1i","x2i","d2p","perplexity","tol","Nf","N","floor","Htarget","P","prow","betamin","Infinity","betamax","beta","done","num","psum","pj","exp","Hhere","abs","Pout","N2","max","sign","tSNE","this","dim","epsilon","iter","prototype","initDataRaw","X","dists","dist","xtod","initSolution","initDataDist","Y","gains","ystep","getSolution","step","cg","costGrad","cost","grad","ymean","gid","sid","gainid","newgain","newsid","debugGrad","e","yold","cg0","cg1","analytic","numerical","console","pmul","Qu","qsum","dsum","dhere","qu","NN","Q","q","gsum","premult","module","exports","window","useStyles","makeStyles","theme","homePage","position","width","textAlign","display","flexGrow","borderRadius","avatar","height","margin","top","bottom","props","classes","Paper","className","onClick","handleClickAway","Grid","container","item","xs","avgTypingDelay","cursor","show","blink","Delay","ms","Backspace","count","delay","href","rel","target","aria-hidden","icon","stackOverflow","style","fontSize","fontWeight","blockName","children","BorderLinearProgress","withStyles","root","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","skill","variant","value","progress","transform","startYear","endYear","marginTop","degree","schoolName","major","marginBottom","jobName","company","team","subject","methods","tools","jobDescription","resumeRoot","flexWrap","paperLeft","padding","paperRight","overflowY","elevation","justifyContent","Avatar","alt","src","paddingTop","color","borderTop","borderBottom","textDecoration","Experience","Education","SkillBlock","Skills","session_fer","InferenceSession","backendHint","session_rag","LABEL_FER","0","1","2","3","4","5","6","LABEL_GENDER","LABEL_RACE","loadONNXModel","a","loadModel","useState","isPlaying","setIsPlaying","webcamRef","useRef","canvasRef","inputImageRef","detectFace","faceModel","current","video","readyState","videoWidth","videoHeight","ctx","getContext","estimateFaces","input","faces","requestAnimationFrame","drawFace","face","handlePredictDemoclassi","predictions","beginPath","strokeStyle","lineWidth","moveTo","boundingBox","topLeft","lineTo","bottomRight","scale","font","textBaseline","fillStyle","fillText","stroke","closePath","getImgScaled","ctxScaled","targetWidth","targetHeight","srcVideo","sx","sy","faceWidth","faceHeight","clearRect","drawImage","imgScaled","getImageData","canvas","data","imgArray","ndarray","Float32Array","inputArray","ops","assign","pick","divseq","faceX","faceY","ctxInputImage","imgTensor","Tensor","run","outputMapFer","outputMapRag","outputTensorFer","argmax","values","next","outputTensorAge","get","outputTensorGender","outputTensorRace","finalOutput","toFixed","useEffect","runDetection","tf_face_detector","mediapipeFacemesh","setInterval","ref","mirrored","audio","forceScreenshotSourceSize","screenshotFormat","screenshotQuality","left","right","zindex","CircularProgress","size","Alert","severity","AlertTitle","Typography","role","aria-label","paddingLeft","Button","endIcon","marginRight","groupRef","renderAxis","orient","axisLabel","axisLabelText","includes","Error","axisType","axis","d3Axis","tickPadding","ticks","d3","each","selectedAxis","call","axisLabelPositions","axisLabelPositionX","axisLabelPositionY","append","attr","labelTextSelector","rotation","enter","merge","text","innerHeight","selectAll","innerWidth","remove","translate","axisProps","xProps","yProps","columns","scales","id","gRef","xColumn","yColumn","xScale","yScale","rects","bandwidth","transition","duration","dimensions","title","innerDimensions","marginLeft","domain","range","map","Axes","y","Bars","session","softMaxFunc","ar","denom","reduce","b","canvasRefScaled","contextRef","isDrawing","setIsDrawing","defaultBarData","pred","category","key","barData","setBarData","canvasContext","lineCap","handlePredict","canvasContextScaled","document","getElementById","subseq","outputMap","outputTensor","predProba","predData","p","idx","toString","onMouseDown","nativeEvent","offsetX","offsetY","onMouseUp","onMouseMove","BarChart","TabPanel","index","other","component","hidden","aria-labelledby","Box","a11yProps","background","paper","React","setValue","AppBar","Tabs","onChange","event","newValue","textColor","scrollButtons","Tab","label","DEmoClassi","Mnist","Axis","prevProps","axisClassPrefix","axisGroup","exit","removeTickLine","Component","clickedCategory","setClickedCategory","circlesGroup","catColumn","colorScale","scatterGroup","globalEnter","on","select","legendGroup","legendRadius","legendCircles","legendCirclesEnter","rowProcessor","row","PetalLengthCm","PetalWidthCm","SepalLengthCm","SepalWidthCm","formControlStyle","minWidth","inputLabelStyle","paddingBottom","getDimensions","margins","IrisAnimated","handleResize","setState","prevState","handleXColumnChange","state","handleYColumnChange","cat","addEventListener","then","removeEventListener","listColumns","xExtent","yExtent","colorExtent","Set","Species","nice","FormControl","InputLabel","Select","labelId","col","MenuItem","ScatterCircles","zScale","zColumn","myContainer","node","child","lastElementChild","removeChild","removeChildrenNodes","generateSprite","createElement","context","arc","side","PI","globalAlpha","fill","materials","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","Object3D","add","z","rotationInteraction","zoom","scaleExtent","translateExtent","rotationSelection","translateBy","animate","render","forEach","sprite","Sprite","SpriteMaterial","CanvasTexture","material","set","Iris3D","handleZColumnChange","drawLegend","legendYOffset","zExtent","Scatter3D","tSNEJs","require","myDelayer","Promise","res","setTimeout","handlePlayClick","handleResetClick","tsne","embeddings","computeScales","circleGroup","initialPerplexity","initialEpsilon","handleSliderChange","param","drawCircles","dataTSNE","plotContainer","Id","circleGroupEnter","alignContent","gutterBottom","Slider","defaultValue","valueLabelDisplay","marks","min","onChangeCommitted","PlaceHolder","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","content","contentShift","menuIcons","open","setOpen","activeMenu","setActiveMenu","handleMenuChange","menu","CssBaseline","clsx","Toolbar","ClickAwayListener","onClickAway","IconButton","edge","noWrap","Drawer","anchor","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","HomePage","Resume","ScatterPlotPage","VisionPage","NLPPage","App","Main","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.56fc9abf.chunk.js","sourcesContent":["/* eslint-disable */\n// create main global object\nvar tsnejs = tsnejs || { REVISION: 'ALPHA' };\n\n(function (global) {\n  // \"use strict\";\n\n  // utility function\n  var assert = function (condition, message) {\n    if (!condition) { throw message || \"Assertion failed\"; }\n  }\n\n  // syntax sugar\n  var getopt = function (opt, field, defaultval) {\n    if (opt.hasOwnProperty(field)) {\n      return opt[field];\n    } else {\n      return defaultval;\n    }\n  }\n\n  // return 0 mean unit standard deviation random number\n  var return_v = false;\n  var v_val = 0.0;\n  var gaussRandom = function () {\n    if (return_v) {\n      return_v = false;\n      return v_val;\n    }\n    var u = 2 * Math.random() - 1;\n    var v = 2 * Math.random() - 1;\n    var r = u * u + v * v;\n    if (r === 0 || r > 1) return gaussRandom();\n    var c = Math.sqrt(-2 * Math.log(r) / r);\n    v_val = v * c; // cache this for next function call for efficiency\n    return_v = true;\n    return u * c;\n  }\n\n  // return random normal number\n  var randn = function (mu, std) { return mu + gaussRandom() * std; }\n\n  // utilitity that creates contiguous vector of zeros of size n\n  var zeros = function (n) {\n    if (typeof (n) === 'undefined' || isNaN(n)) { return []; }\n    if (typeof ArrayBuffer === 'undefined') {\n      // lacking browser support\n      var arr = new Array(n);\n      for (var i = 0; i < n; i++) { arr[i] = 0; }\n      return arr;\n    } else {\n      return new Float64Array(n); // typed arrays are faster\n    }\n  }\n\n  // utility that returns 2d array filled with random numbers\n  // or with value s, if provided\n  var randn2d = function (n, d, s) {\n    var uses = typeof s !== 'undefined';\n    var x = [];\n    for (var i = 0; i < n; i++) {\n      var xhere = [];\n      for (var j = 0; j < d; j++) {\n        if (uses) {\n          xhere.push(s);\n        } else {\n          xhere.push(randn(0.0, 1e-4));\n        }\n      }\n      x.push(xhere);\n    }\n    return x;\n  }\n\n  // compute L2 distance between two vectors\n  var L2 = function (x1, x2) {\n    var D = x1.length;\n    var d = 0;\n    for (var i = 0; i < D; i++) {\n      var x1i = x1[i];\n      var x2i = x2[i];\n      d += (x1i - x2i) * (x1i - x2i);\n    }\n    return d;\n  }\n\n  // compute pairwise distance in all vectors in X\n  var xtod = function (X) {\n    var N = X.length;\n    var dist = zeros(N * N); // allocate contiguous array\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        var d = L2(X[i], X[j]);\n        dist[i * N + j] = d;\n        dist[j * N + i] = d;\n      }\n    }\n    return dist;\n  }\n\n  // compute (p_{i|j} + p_{j|i})/(2n)\n  var d2p = function (D, perplexity, tol) {\n    var Nf = Math.sqrt(D.length); // this better be an integer\n    var N = Math.floor(Nf);\n    assert(N === Nf, \"D should have square number of elements.\");\n    var Htarget = Math.log(perplexity); // target entropy of distribution\n    var P = zeros(N * N); // temporary probability matrix\n\n    var prow = zeros(N); // a temporary storage compartment\n    for (var i = 0; i < N; i++) {\n      var betamin = -Infinity;\n      var betamax = Infinity;\n      var beta = 1; // initial value of precision\n      var done = false;\n      var maxtries = 50;\n\n      // perform binary search to find a suitable precision beta\n      // so that the entropy of the distribution is appropriate\n      var num = 0;\n      while (!done) {\n        //debugger;\n\n        // compute entropy and kernel row with beta precision\n        var psum = 0.0;\n        for (var j = 0; j < N; j++) {\n          var pj = Math.exp(- D[i * N + j] * beta);\n          if (i === j) { pj = 0; } // we dont care about diagonals\n          prow[j] = pj;\n          psum += pj;\n        }\n        // normalize p and compute entropy\n        var Hhere = 0.0;\n        for (var j = 0; j < N; j++) {\n          if (psum === 0) {\n            var pj = 0;\n          } else {\n            var pj = prow[j] / psum;\n          }\n          prow[j] = pj;\n          if (pj > 1e-7) Hhere -= pj * Math.log(pj);\n        }\n\n        // adjust beta based on result\n        if (Hhere > Htarget) {\n          // entropy was too high (distribution too diffuse)\n          // so we need to increase the precision for more peaky distribution\n          betamin = beta; // move up the bounds\n          if (betamax === Infinity) { beta = beta * 2; }\n          else { beta = (beta + betamax) / 2; }\n\n        } else {\n          // converse case. make distrubtion less peaky\n          betamax = beta;\n          if (betamin === -Infinity) { beta = beta / 2; }\n          else { beta = (beta + betamin) / 2; }\n        }\n\n        // stopping conditions: too many tries or got a good precision\n        num++;\n        if (Math.abs(Hhere - Htarget) < tol) { done = true; }\n        if (num >= maxtries) { done = true; }\n      }\n\n      // console.log('data point ' + i + ' gets precision ' + beta + ' after ' + num + ' binary search steps.');\n      // copy over the final prow to P at row i\n      for (var j = 0; j < N; j++) { P[i * N + j] = prow[j]; }\n\n    } // end loop over examples i\n\n    // symmetrize P and normalize it to sum to 1 over all ij\n    var Pout = zeros(N * N);\n    var N2 = N * 2;\n    for (var i = 0; i < N; i++) {\n      for (var j = 0; j < N; j++) {\n        Pout[i * N + j] = Math.max((P[i * N + j] + P[j * N + i]) / N2, 1e-100);\n      }\n    }\n\n    return Pout;\n  }\n\n  // helper function\n  function sign(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; }\n\n  var tSNE = function (opt) {\n    var opt = opt || {};\n    this.perplexity = getopt(opt, \"perplexity\", 30); // effective number of nearest neighbors\n    this.dim = getopt(opt, \"dim\", 2); // by default 2-D tSNE\n    this.epsilon = getopt(opt, \"epsilon\", 10); // learning rate\n\n    this.iter = 0;\n  }\n\n  tSNE.prototype = {\n\n    // this function takes a set of high-dimensional points\n    // and creates matrix P from them using gaussian kernel\n    initDataRaw: function (X) {\n      var N = X.length;\n      var D = X[0].length;\n      assert(N > 0, \" X is empty? You must have some data!\");\n      assert(D > 0, \" X[0] is empty? Where is the data?\");\n      var dists = xtod(X); // convert X to distances using gaussian kernel\n      this.P = d2p(dists, this.perplexity, 1e-4); // attach to object\n      this.N = N; // back up the size of the dataset\n      this.initSolution(); // refresh this\n    },\n\n    // this function takes a given distance matrix and creates\n    // matrix P from them.\n    // D is assumed to be provided as a list of lists, and should be symmetric\n    initDataDist: function (D) {\n      var N = D.length;\n      assert(N > 0, \" X is empty? You must have some data!\");\n      // convert D to a (fast) typed array version\n      var dists = zeros(N * N); // allocate contiguous array\n      for (var i = 0; i < N; i++) {\n        for (var j = i + 1; j < N; j++) {\n          var d = D[i][j];\n          dists[i * N + j] = d;\n          dists[j * N + i] = d;\n        }\n      }\n      this.P = d2p(dists, this.perplexity, 1e-4);\n      this.N = N;\n      this.initSolution(); // refresh this\n    },\n\n    // (re)initializes the solution to random\n    initSolution: function () {\n      // generate random solution to t-SNE\n      this.Y = randn2d(this.N, this.dim); // the solution\n      this.gains = randn2d(this.N, this.dim, 1.0); // step gains to accelerate progress in unchanging directions\n      this.ystep = randn2d(this.N, this.dim, 0.0); // momentum accumulator\n      this.iter = 0;\n    },\n\n    // return pointer to current solution\n    getSolution: function () {\n      return this.Y;\n    },\n\n    // perform a single step of optimization to improve the embedding\n    step: function () {\n      this.iter += 1;\n      var N = this.N;\n\n      var cg = this.costGrad(this.Y); // evaluate gradient\n      var cost = cg.cost;\n      var grad = cg.grad;\n\n      // perform gradient step\n      var ymean = zeros(this.dim);\n      for (var i = 0; i < N; i++) {\n        for (var d = 0; d < this.dim; d++) {\n          var gid = grad[i][d];\n          var sid = this.ystep[i][d];\n          var gainid = this.gains[i][d];\n\n          // compute gain update\n          var newgain = sign(gid) === sign(sid) ? gainid * 0.8 : gainid + 0.2;\n          if (newgain < 0.01) newgain = 0.01; // clamp\n          this.gains[i][d] = newgain; // store for next turn\n\n          // compute momentum step direction\n          var momval = this.iter < 250 ? 0.5 : 0.8;\n          var newsid = momval * sid - this.epsilon * newgain * grad[i][d];\n          this.ystep[i][d] = newsid; // remember the step we took\n\n          // step!\n          this.Y[i][d] += newsid;\n\n          ymean[d] += this.Y[i][d]; // accumulate mean so that we can center later\n        }\n      }\n\n      // reproject Y to be zero mean\n      for (var i = 0; i < N; i++) {\n        for (var d = 0; d < this.dim; d++) {\n          this.Y[i][d] -= ymean[d] / N;\n        }\n      }\n\n      //if(this.iter%100===0) console.log('iter ' + this.iter + ', cost: ' + cost);\n      return cost; // return current cost\n    },\n\n    // for debugging: gradient check\n    debugGrad: function () {\n      var N = this.N;\n\n      var cg = this.costGrad(this.Y); // evaluate gradient\n      var cost = cg.cost;\n      var grad = cg.grad;\n\n      var e = 1e-5;\n      for (var i = 0; i < N; i++) {\n        for (var d = 0; d < this.dim; d++) {\n          var yold = this.Y[i][d];\n\n          this.Y[i][d] = yold + e;\n          var cg0 = this.costGrad(this.Y);\n\n          this.Y[i][d] = yold - e;\n          var cg1 = this.costGrad(this.Y);\n\n          var analytic = grad[i][d];\n          var numerical = (cg0.cost - cg1.cost) / (2 * e);\n          console.log(i + ',' + d + ': gradcheck analytic: ' + analytic + ' vs. numerical: ' + numerical);\n\n          this.Y[i][d] = yold;\n        }\n      }\n    },\n\n    // return cost and gradient, given an arrangement\n    costGrad: function (Y) {\n      var N = this.N;\n      var dim = this.dim; // dim of output space\n      var P = this.P;\n\n      var pmul = this.iter < 100 ? 4 : 1; // trick that helps with local optima\n\n      // compute current Q distribution, unnormalized first\n      var Qu = zeros(N * N);\n      var qsum = 0.0;\n      for (var i = 0; i < N; i++) {\n        for (var j = i + 1; j < N; j++) {\n          var dsum = 0.0;\n          for (var d = 0; d < dim; d++) {\n            var dhere = Y[i][d] - Y[j][d];\n            dsum += dhere * dhere;\n          }\n          var qu = 1.0 / (1.0 + dsum); // Student t-distribution\n          Qu[i * N + j] = qu;\n          Qu[j * N + i] = qu;\n          qsum += 2 * qu;\n        }\n      }\n      // normalize Q distribution to sum to 1\n      var NN = N * N;\n      var Q = zeros(NN);\n      for (var q = 0; q < NN; q++) { Q[q] = Math.max(Qu[q] / qsum, 1e-100); }\n\n      var cost = 0.0;\n      var grad = [];\n      for (var i = 0; i < N; i++) {\n        var gsum = new Array(dim); // init grad for point i\n        for (var d = 0; d < dim; d++) { gsum[d] = 0.0; }\n        for (var j = 0; j < N; j++) {\n          cost += - P[i * N + j] * Math.log(Q[i * N + j]); // accumulate cost (the non-constant portion at least...)\n          var premult = 4 * (pmul * P[i * N + j] - Q[i * N + j]) * Qu[i * N + j];\n          for (var d = 0; d < dim; d++) {\n            gsum[d] += premult * (Y[i][d] - Y[j][d]);\n          }\n        }\n        grad.push(gsum);\n      }\n\n      return { cost: cost, grad: grad };\n    }\n  }\n\n  global.tSNE = tSNE; // export tSNE class\n})(tsnejs);\n\n\n// export the library to window, or to module in nodejs\n(function (lib) {\n  // \"use strict\";\n  if (typeof module === \"undefined\" || typeof module.exports === \"undefined\") {\n    window.tsnejs = lib; // in ordinary browser attach library to window\n  } else {\n    module.exports = lib; // in nodejs\n  }\n})(tsnejs);\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n// import Avatar from '@material-ui/core/Avatar'\nimport Grid from '@material-ui/core/Grid'\nimport Typist from 'react-typist'\nimport { Icon } from '@iconify/react'\nimport stackOverflow from '@iconify/icons-mdi/stack-overflow'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  homePage: {\n    position: 'fixed',\n    width: '100%',\n    textAlign: 'center',\n    display: 'flex',\n    flexGrow: 1,\n    borderRadius: 0\n  },\n  avatar: {\n    width: '30vmin',\n    height: '30vmin',\n    textAlign: 'center',\n    margin: 'auto',\n    top: '3vw',\n    bottom: '15vh',\n  }\n}));\n\n\n\nexport default (props) => {\n\n  const classes = useStyles()\n\n  return (\n\n    <Paper className={`${classes.homePage} home-page`} onClick={props.handleClickAway} >\n      <Grid container className='home-grid'>\n        {/* <Grid item xs={12}>\n          <Avatar alt=\"Profil\" src=\"/static/images/alka2.jpg\" className={`avatar-img ${classes.avatar}`} />\n        </Grid> */}\n        <Grid item xs={12}>\n          <div className='banner-text' >\n            <Typist avgTypingDelay={50} cursor={{ show: false, blink: false }} >\n              <h2>Mahamadou S. A. ALKA</h2>\n              <Typist.Delay ms={1000} />\n              <h4 >\n                <span>Statistici</span>\n                <Typist.Backspace count={10} delay={500} />\n                <span>Machine Learning Research Engineer</span>\n              </h4>\n            </Typist>\n\n            <hr />\n            <p> Python | Pytorch | Tensorflow/Keras | Scikit-Learn | Pandas/Numpy | D3.js/Matplotlib/Bokeh | JS/React/ReactNative/HTML/CSS </p>\n            <div className='social-links' >\n              <a href='https://www.linkedin.com/in/mahamadou-salissou-aboubacar-alka-038491133' rel=\"noopener noreferrer\" target='_blank' >\n                <i className=\"fa fa-linkedin-square\" aria-hidden='true'></i>\n              </a>\n\n              <a href='https://github.com/AlkaSaliss?tab=repositories' rel=\"noopener noreferrer\" target='_blank' >\n                <i className=\"fa fa-github-square\" aria-hidden='true'></i>\n              </a>\n\n              {/* <a href='https://twitter.com/salissoualka' rel=\"noopener noreferrer\" target='_blank' >\n                <i className=\"fa fa-twitter-square\" aria-hidden='true'></i>\n              </a> */}\n\n              <a href='https://stackoverflow.com/users/7437524/alka?tab=profile' rel=\"noopener noreferrer\" target='_blank' >\n                <Icon icon={stackOverflow} className='stack-overflow-icon' />\n              </a>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\n\nexport default (props) => {\n\n  return (\n    <Grid container>\n      <Grid item xs={2}>\n        <div style={{ fontSize: '2.5vmin', fontWeight: 'bold' }}>\n          {props.blockName}\n        </div>\n      </Grid>\n      <Grid item xs={10}>\n        <div>\n          {props.children}\n        </div>\n      </Grid>\n\n\n    </Grid>\n  )\n}","import React from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress)\n\n\nexport default (props) => {\n  return (\n    <div className='skill'>\n      <Grid container>\n        <Grid item xs={4} style={{ textAlign: 'right' }}>\n          <span> {props.skill}</span>\n        </Grid>\n        <Grid item xs={8}>\n          <BorderLinearProgress\n            variant=\"determinate\"\n            value={props.progress}\n            style={{\n              margin: 'auto',\n              width: '75%',\n              transform: `translate(0, 0.8em)`\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\n\nexport default (props) => {\n\n  return (\n    <div className='education'>\n      <Grid container>\n        <Grid item xs={4}>\n          <p style={{ fontSize: '2.5vmin' }}>{props.startYear} - {props.endYear} </p>\n        </Grid>\n        <Grid item xs={8}>\n          <h4 style={{ marginTop: '0px', fontSize: '2.5vmin' }} >{props.degree}</h4>\n          <p> <strong>School: </strong>{props.schoolName}</p>\n          <p> <strong>Major: </strong>{props.major}</p>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\n\nexport default (props) => {\n\n  return (\n    <div className='experience'>\n      <Grid container style={{ marginBottom: '2em' }}>\n        <Grid item xs={4}>\n          <p style={{ fontSize: '2.5vmin' }}>{props.startYear} - {props.endYear} </p>\n        </Grid>\n        <Grid item xs={8}>\n          <h4 style={{ marginTop: '0px', fontSize: '2.5vmin' }} >{props.jobName}</h4>\n          <p> <strong>Company: </strong>{props.company} | <strong>Team: </strong>{props.team}</p>\n          <p> <strong>Subject: </strong>{props.subject}</p>\n          <p> <strong>Methods: </strong>{props.methods}</p>\n          <p> <strong>Tools: </strong>{props.tools}</p>\n          <p>{props.jobDescription}</p>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport SkillBlock from './SkillBlock'\nimport Skills from './Skills'\nimport Education from './Education'\nimport Experience from './Experience'\n\n\nconst useStyles = makeStyles((theme) => ({\n  resumeRoot: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    position: 'fixed',\n    height: '100%',\n  },\n  paperLeft: {\n    width: '40%',\n    height: '100hv',\n    padding: '1.1vmin'\n  },\n  paperRight: {\n    width: '60%',\n    height: '100%',\n    overflowY: 'auto'\n  },\n  avatar: {\n    // width: '250px',\n    // height: '250px'\n    width: '30vmin',\n    height: '30vmin',\n  }\n}))\n\nexport default (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.resumeRoot} onClick={props.handleClickAway}>\n      <Paper className={`${classes.paperLeft} paper-left`} elevation={0}>\n        <Grid container>\n          <Grid item xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\n            <Avatar alt=\"Profil\" src=\"/static/images/alka2.jpg\" className={classes.avatar} />\n          </Grid>\n          <Grid item xs={12}>\n            <h2 style={{ paddingTop: '0.2em', textAlign: 'center', color: 'white', fontSize: '3vmin' }} >Mahamadou S. A. ALKA</h2>\n            <h4 style={{ color: 'white', textAlign: 'center', fontSize: '2.5vmin' }} > Research Engineer </h4>\n            <h5 style={{ color: 'white', textAlign: 'center', fontSize: '2vmin' }} > Data Science / Machine Learning</h5>\n            <hr\n              style={{\n                borderTop: '3px solid #833fb2',\n                width: '50%',\n                margin: 'auto',\n                marginBottom: '1em',\n                borderBottom: 'none'\n              }}\n            />\n            <p style={{ textAlign: 'justify', fontSize: '2.5vmin', color: '#f6fcfb' }}>\n              Currently working as a Research Engineer at ATOS, in the application of AI to cyber security issues : users behavior modelling, anomaly detection, ..., using machine learning and deep learning.\n            </p>\n            <p style={{ fontSize: '2.5vmin', color: '#f6fcfb' }}>\n              In my free time, I am also interested in subjects related to Computer Vision, NLP\n            and data visualization. You can fin some of my side projects on this website and also \n            <a href='https://github.com/AlkaSaliss?tab=repositories' rel=\"noopener noreferrer\" target='_blank' style={{ textDecoration: 'none', color: 'blue' }} > on github here.</a>\n            </p>\n          </Grid>\n        </Grid>\n\n      </Paper>\n      <Paper className={`${classes.paperRight} paper-right`} elevation={3}>\n        <h2>Experience</h2>\n        <Experience\n          startYear='2018'\n          endYear='now'\n          jobName='Research Engineer - Machine Learning'\n          company='Atos, Les Clayes-Sous-Bois, France'\n          team='Machine Intelligence for Cyber Security'\n          subject=\"Developping machine learning based tools for anomaly detection in cyber security\"\n          methods=\"Machine learning | Deep learning | Data analysis/visualization | Software engineering\"\n          tools=\"Python | Pytorch | Tensorflow/Keras | Scikit-learn | Docker | Linux | Spark\"\n        />\n        <Experience\n          startYear='Apr'\n          endYear='Sep 2018'\n          jobName='Deep learning intern'\n          company='Equancy , Paris, France'\n          team='Data Intelligence'\n          subject=\"Deep learning based approaches for 'translating natural language questions to SQL queries'\"\n          methods=\"Sequence-to-sequence Deep Learning models\"\n          tools=\"Python | Tensorflow/Keras | Spacy | Scikit-learn | AWS\"\n        />\n        <Experience\n          startYear='June'\n          endYear='Aug 2017'\n          jobName='Statistician intern'\n          company='Le Crédit Lyonnais (LCL), Villejuif, France'\n          team='Quantitative Models Validation'\n          subject=\"Anomaly analysis on credit risk data\"\n          methods=\"Regression models | Exploratory data analysis\"\n          tools=\"SAS\"\n        />\n        <Experience\n          startYear='Feb'\n          endYear='June 2016'\n          jobName='Statistician/Economist intern'\n          company='Laboratoire de Recherches Economiques et Monétaires (LAREM), Dakar, Sénégal'\n          team='LAREM'\n          subject=\"Determinant of innovation in small & medium enterprises in Ivory-Coast\"\n          methods=\"Multivariate Probit models | Exploratory data analysis\"\n          tools=\"R | Stata\"\n        />\n\n        <hr style={{ borderTop: '3px solid blue' }} />\n\n        <h2>Education</h2>\n        <Education\n          startYear={2016}\n          endYear={2018}\n          degree=\"Engineering degree in Data Science / Statistics / Data Engineering\"\n          schoolName='Ensai - Rennes, France'\n          major=\"Machine Learning | Statistics/Econometrics | Big Data technologies | Software & Web Development\"\n        />\n        <Education\n          startYear={2012}\n          endYear={2016}\n          degree=\"Engineering degree in Statistics / Economics\"\n          schoolName='Ensae - Dakar, Senegal'\n          major=\"Statistical modelling | Econometrics | Survey Data collection and analysis | Economics\"\n        />\n        <hr style={{ borderTop: '3px solid blue' }} />\n\n        <h2>Skills</h2>\n\n        <SkillBlock blockName='Data Science'>\n          <Skills\n            skill='Linear models | Tree-based models | Clustering techniques (Scikit-learn)'\n            progress={90}\n          />\n          <Skills\n            skill='Deep Learning (Pytorch, Tensorflow/Keras)'\n            progress={90}\n          />\n          <Skills\n            skill='Data Analysis (Pandas, Numpy)'\n            progress={90}\n          />\n          <Skills\n            skill='Data Viz (d3.js, Matplotlib, Bokeh, Plotly)'\n            progress={80}\n          />\n        </SkillBlock>\n        <hr style={{ borderTop: '1px solid #c1cfcf' }} />\n        <SkillBlock blockName='Software | Web | Mobile Dev'>\n          <Skills\n            skill='Python'\n            progress={95}\n          />\n          <Skills\n            skill='Linux | Bash'\n            progress={70}\n          />\n          <Skills\n            skill='Git'\n            progress={80}\n          />\n          <Skills\n            skill='Docker'\n            progress={70}\n          />\n          <Skills\n            skill='Javascript | React | React-Native'\n            progress={80}\n          />\n          <Skills\n            skill='HTML | CSS'\n            progress={70}\n          />\n        </SkillBlock>\n      </Paper>\n    </div>\n  )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport Webcam from 'react-webcam'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport PlayArrow from '@material-ui/icons/PlayArrow'\nimport Pause from '@material-ui/icons/PauseCircleFilled'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n// import Avatar from '@material-ui/core/Avatar'\nimport {Alert, AlertTitle} from '@material-ui/lab'\nimport * as tf_face_detector from '@tensorflow-models/face-landmarks-detection'\nimport { InferenceSession, Tensor } from \"onnxjs\"\nimport ndarray from 'ndarray'\nimport ops from 'ndarray-ops'\n\n\nvar session_fer = new InferenceSession({ backendHint: 'webgl' })\nvar session_rag = new InferenceSession({ backendHint: 'webgl' })\nconst MODEL_URL_FER = \"static/ml_models/fer.onnx\"\nconst MODEL_URL_RAG = \"static/ml_models/rag.onnx\"\nconst LABEL_FER = {\n  0: 'Angry',\n  1: 'Disgust',\n  2: 'Fear',\n  3: 'Happy',\n  4: 'Sad',\n  5: 'Surprise',\n  6: 'Neutral'\n}\nconst LABEL_GENDER = {0: 'Man', 1: 'Woman'}\nconst LABEL_RACE = {0: 'White', 1: 'Black', 2: 'Asian', 3: 'Indian', 4: 'Other'}\n\n// loading model\nconst loadONNXModel = async () => {\n  await session_fer.loadModel(MODEL_URL_FER)\n  await session_rag.loadModel(MODEL_URL_RAG)\n}\n\nexport default () => {\n\n  const [isPlaying, setIsPlaying] = useState(false)\n  // const [isPlaying, setIsPlaying] = useState(false)\n  const webcamRef = useRef(null)\n  const canvasRef = useRef(null)\n  const inputImageRef = useRef(null)\n  const WIDTH = 640\n  const HEIGHT = 450\n\n  const handlePlayClick = () => setIsPlaying(!isPlaying)\n\n  // face detection function\n  const detectFace = async (faceModel) => {\n    // check video is up and running  \n    if (typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      typeof canvasRef.current !== \"undefined\" &&\n      inputImageRef.current !== null &&\n      typeof inputImageRef.current !== \"undefined\" &&\n      canvasRef.current !== null &&\n      webcamRef.current.video.readyState === 4) {\n\n      const video = webcamRef.current.video\n      const videoWidth = webcamRef.current.video.videoWidth\n      const videoHeight = webcamRef.current.video.videoHeight\n      // Set video width/height\n      webcamRef.current.video.width = videoWidth\n      webcamRef.current.video.height = videoHeight\n      // Set canvas width/height\n      canvasRef.current.width = videoWidth\n      canvasRef.current.height = videoHeight\n      const ctx = canvasRef.current.getContext('2d')\n      // // detect faces\n      const faces = await faceModel.estimateFaces({ input: video })\n      // draw faces\n      requestAnimationFrame(() => drawFace(ctx, faces, video))\n    }\n  }\n\n\n  // function to draw face bounding box on canvas\n  const drawFace = async(ctx, faces, video) => {\n    if (faces.length > 0) {\n      for (let face of faces) {\n        // face = getAlignedBbox(face)\n        // console.log(face)\n        const predictions = await handlePredictDemoclassi(video, face)\n\n        ctx.beginPath()\n        // ctx.strokeStyle = \"#42f5e9\"\n        ctx.strokeStyle = \"#7d2ab0\"\n        ctx.lineWidth = 5\n        \n        ctx.moveTo(face.boundingBox.topLeft[0], face.boundingBox.topLeft[1])\n        ctx.lineTo(face.boundingBox.bottomRight[0], face.boundingBox.topLeft[1])\n        ctx.lineTo(face.boundingBox.bottomRight[0], face.boundingBox.bottomRight[1])\n        ctx.lineTo(face.boundingBox.topLeft[0], face.boundingBox.bottomRight[1])\n        ctx.lineTo(face.boundingBox.topLeft[0], face.boundingBox.topLeft[1])\n\n        ctx.scale(-1, 1)\n        const [fontSize, fontFamily, fontColor, textAlign, textBaseline] = [1.25, \"cursive\", \"#7d2ab0\", \"right\", \"top\"] \n        ctx.font = `${fontSize}em ${fontFamily}`\n        ctx.textAlign = textAlign\n        ctx.textBaseline = textBaseline\n        ctx.fillStyle = fontColor\n        ctx.fillText(predictions, -1.15*face.boundingBox.topLeft[0], face.boundingBox.topLeft[1]-20)\n        ctx.stroke()\n        ctx.closePath()\n      }\n    }\n  }\n\n\n  const getImgScaled = (ctxScaled, targetWidth, targetHeight, srcVideo, sx, sy, faceWidth, faceHeight) => {\n\n    ctxScaled.clearRect(0, 0, targetWidth, targetHeight)\n    ctxScaled.drawImage(srcVideo, sx, sy, faceWidth, faceHeight, 0, 0, targetWidth, targetHeight)\n    const imgScaled = ctxScaled.getImageData(0, 0, ctxScaled.canvas.width, ctxScaled.canvas.height)\n    const { data, width, height } = imgScaled\n    const imgArray = ndarray(new Float32Array(data), [width, height, 4])\n    const nChannels = 3\n    const inputArray = ndarray(new Float32Array(width * height * nChannels), [1, nChannels, width, height])\n    for (let i = 0; i < nChannels; i++) {\n      ops.assign(inputArray.pick(0, i, null, null), imgArray.pick(null, null, i))\n    }\n    ops.divseq(inputArray, 255)\n    return inputArray\n  }\n\n\n  const handlePredictDemoclassi = async (srcVideo, face) => {\n    if (typeof inputImageRef.current !== \"undefined\" &&\n      inputImageRef.current !== null){\n        const faceWidth = face.boundingBox.bottomRight[0] - face.boundingBox.topLeft[0]\n        const faceHeight = face.boundingBox.bottomRight[1] - face.boundingBox.topLeft[1]\n        const faceX = face.boundingBox.topLeft[0]\n        const faceY = face.boundingBox.topLeft[1]\n        const [targetWidth, targetHeight] = [128, 128]\n        const ctxInputImage = inputImageRef.current.getContext(\"2d\")\n        const imgScaled = getImgScaled(ctxInputImage, targetWidth, targetHeight, srcVideo, faceX, faceY, faceWidth, faceHeight)\n\n        const imgTensor = [\n          new Tensor(imgScaled.data, 'float32', [1, 3, targetWidth, targetHeight])\n        ]\n        const outputMapFer = await session_fer.run(imgTensor)\n        const outputMapRag = await session_rag.run(imgTensor)\n        let outputTensorFer = ops.argmax(ndarray(new Float32Array(outputMapFer.values().next().value.data)))\n        let outputTensorAge = outputMapRag.get(\"age\").data[0]\n        let outputTensorGender = ops.argmax(ndarray(new Float32Array(outputMapRag.get(\"gender\").data)))\n        let outputTensorRace = ops.argmax(ndarray(new Float32Array(outputMapRag.get(\"race\").data)))\n        outputTensorFer = LABEL_FER[outputTensorFer]\n        outputTensorGender = LABEL_GENDER[outputTensorGender]\n        outputTensorRace = LABEL_RACE[outputTensorRace] \n        const finalOutput = `${outputTensorFer} ${outputTensorRace} ${outputTensorGender} --- Age ${outputTensorAge.toFixed(0)}`\n        return finalOutput\n      }\n    return \"Predicting ...\"\n  }\n\n\n  useEffect(() => {\n    const runDetection = async () => {\n      const faceModel = await tf_face_detector.load(\n        tf_face_detector.SupportedPackages.mediapipeFacemesh\n      )\n      setInterval(() => detectFace(faceModel), 100)\n    }\n\n    loadONNXModel()\n    runDetection()\n\n    return () => {\n      // reinitialize models otherwise exception raised : already initialized\n      session_fer = new InferenceSession({ backendHint: 'webgl' })\n      session_rag = new InferenceSession({ backendHint: 'webgl' })\n    }\n\n  }, [])\n\n\n  return (\n    <Grid container className='democlassi-container'>\n      <Grid item xs={8} className='democlassi-camera' style={{ textAlign: 'center' }}>\n        {isPlaying ?\n          <div\n            style={{ display: 'inline-block' }}\n          >\n            <Webcam\n              ref={webcamRef}\n              mirrored={true}\n              audio={false}\n              forceScreenshotSourceSize={true}\n              screenshotFormat=\"image/jpeg\"\n              screenshotQuality={1.0}\n              style={{\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                zindex: 9,\n                width: WIDTH,\n                height: HEIGHT,\n              }}\n            />\n            <canvas\n              ref={canvasRef}\n              style={{\n                transform: 'scaleX(-1)',\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                zindex: 9,\n                width: WIDTH,\n                height: HEIGHT,\n              }}\n            />\n            <canvas\n              ref={inputImageRef}\n              height=\"128\"\n              width=\"128\"\n              style={{\n                display: \"none\"\n              }}\n            />\n          </div>\n          :\n          <CircularProgress size='15em' />\n        }\n\n      </Grid>\n      <Grid item xs={4} className='democlassi-camera' style={{ textAlign: 'center' }}>\n        <Alert severity=\"info\">\n          <AlertTitle>Info</AlertTitle>\n            If camera not showing after clicking the button, make sure you access the website via <strong> https</strong>\n        </Alert>\n        <Typography variant='h4' style={{ fontSize: '1.25vw', marginBottom: '10px',  marginTop: '50px'}}>\n          If you're not scared of hackers <span role=\"img\" aria-label=\"desc\">👨🏿‍💻</span>, push the start button & let the MaGiC happen <span role=\"img\" aria-label=\"desc\">🧠</span>.\n          <br/>(Don't worry the model is embedded in your browser! So No data sent anywhere! Yeah We are RGPD compliant ᕙ(▀̿̿Ĺ̯̿̿▀̿ ̿) ᕗ)\n        </Typography>\n        {/* <div style={{ textAlign: 'center', alignItems: 'center', alignContent: 'center'}}>\n          <Avatar alt='emoji'\n            src={'/static/images/upside-down-dizzy-face.png'}\n            style={{ height: '100px', width: '100px', float:'left', marginRight: \"10\"}}\n          />\n          <Avatar alt='emoji'\n            src={'/static/images/upside-down-dizzy-face.png'}\n            style={{ height: '100px', width: '100px', float:'right'}}\n          />\n        </div> */}\n      </Grid>\n      <Grid item xs={12} className='democlassi-camera'>\n        <div style={{ position: 'relative', textAlign: 'center', paddingLeft: '150px', marginBottom: '100px', marginTop: '50px' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={isPlaying ? <Pause /> : <PlayArrow />}\n            onClick={handlePlayClick}\n            style={{ marginRight: '50px' }}\n          >\n            {isPlaying ? 'Pause Camera' : 'Start Face Detection'}\n          </Button>\n        </div>\n      </Grid>\n    </Grid>\n\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport * as d3Axis from 'd3-axis'\n\n\nexport default (props) => {\n\n  const groupRef = useRef(null)\n\n  useEffect(() => {\n    renderAxis()\n  })\n\n  const renderAxis = () => {\n\n    // get scale and extra args\n    const orient = props.orient\n    const scale = props.scale\n    const axisLabel = props.axisLabel\n\n    const axisLabelText = props.axisLabelText\n\n    const allowedOrient = ['Left', 'Bottom']\n    if (!allowedOrient.includes(orient)) {\n\n      throw new Error(\"axisType must be 'Left' or 'Bottom'\")\n    }\n\n    const axisType = `axis${orient}`\n    const axis = d3Axis[axisType]()\n      .scale(scale)\n      .tickPadding([12])\n      .ticks([5])\n\n    // font size of axis tick label\n    if (orient === 'Bottom') {\n      d3.selectAll(\".tick text\")\n        .each(function (d, i) {\n          d3.select(this).style('font-size', '1.5vw')\n        })\n    }\n\n\n    const selectedAxis = d3.select(groupRef.current)\n      .call(axis)\n\n    // If axisLabel prop is provided then add text label to the axis\n    if (axisLabel) {\n\n      let { axisLabelPositionX, axisLabelPositionY } = props.axisLabelPositions\n      axisLabelPositionX = orient === 'Left' ? -axisLabelPositionX : axisLabelPositionX\n      axisLabelPositionY = orient === 'Left' ? -axisLabelPositionY : axisLabelPositionY\n\n      selectedAxis\n        .append('text')\n        .attr('class', `yaxis-label-${axisLabel}`)\n\n      let labelTextSelector = d3.selectAll(`text.yaxis-label-${axisLabel}`)\n        .data([null])\n\n      const rotation = orient === 'Left' ? `rotate(-90)` : `rotate(0)`\n\n      labelTextSelector.enter()\n        .merge(labelTextSelector)\n        .attr('y', axisLabelPositionY)\n        .attr('x', axisLabelPositionX)\n        .attr('fill', 'black')\n        .text(axisLabelText)\n        // .attr('text-anchor', 'middle')\n        .attr('transform', rotation)\n\n      if (orient === 'Bottom') {\n        const innerHeight = props.innerHeight\n        selectedAxis.selectAll('g.tick line')\n          .attr('y2', -innerHeight)\n      } else {\n        const innerWidth = props.innerWidth\n        selectedAxis.selectAll('g.tick line')\n          .attr('x2', innerWidth)\n      }\n    }\n\n    // const removeTickLine = orient === 'Left' ? '.domain, .tick line' : '.domain'\n    // const removeTickLine = props.removeTickLine\n    // if (removeTickLine) {\n    if (orient === 'Bottom') {\n      selectedAxis\n        .selectAll('.tick line')\n        .remove()\n    }\n\n\n  }\n\n  const translate = props.translate\n  return (\n    <g\n      transform={translate}\n      ref={groupRef}\n    >\n    </g>\n  )\n\n}","import React from 'react'\nimport Axis from './Axis'\n\nexport default ({ axisProps }) => {\n\n\tconst { xProps, yProps } = axisProps\n\n\treturn (\n\t\t<g>\n\t\t\t<Axis {...xProps} />\n\t\t\t<Axis {...yProps} />\n\t\t</g>\n\t)\n\n}","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nexport default ({ data, columns, scales, id }) => {\n\n  const gRef = useRef(null)\n  const { xColumn, yColumn } = columns\n  const { xScale, yScale } = scales\n\n  useEffect(() => {\n\n    const gSelect = d3.select(gRef.current)\n\n    const rects = gSelect\n      .selectAll('rect')\n      .data(data)\n\n    rects\n      .enter().append('rect')\n      .attr('class', 'rect-prob-class')\n      .attr('y', d => yScale(d[yColumn]))\n      .attr('height', yScale.bandwidth())\n      .attr('width', 0)\n      .attr('key', d => d[id])\n      .style('fill', '#7d2ab0')\n      .merge(rects)\n      .transition().duration(1000)\n      .delay((d, i) => i * 10)\n      .attr('y', d => yScale(d[yColumn]))\n      .attr('height', yScale.bandwidth())\n      .attr('width', d => xScale(d[xColumn]))\n      .attr('key', d => d[id])\n      .style('fill', '#7d2ab0')\n  })\n\n  return (\n    <g ref={gRef}>\n    </g>\n  )\n}\n","import React from 'react'\nimport * as d3 from 'd3'\nimport Axes from './Axes'\nimport Bars from './Bars'\n\n\nexport default (props) => {\n\n  const data = props.data\n  const { xColumn, yColumn } = props.columns\n  const { width, height } = props.dimensions\n  const title = props.title\n  const innerDimensions = {\n    width: width - props.dimensions.marginLeft - props.dimensions.marginRight,\n    height: height - props.dimensions.marginTop - props.dimensions.marginBottom\n  }\n  const titleOffset = 70\n\n  // compute scales for x and y axis\n  const xScale = d3.scaleLinear()\n    .domain([0, d3.max(data, d => d[xColumn])])\n    .range([0, innerDimensions.width])\n\n  const yScale = d3.scaleBand()\n    .domain(data.map(d => d[yColumn]))\n    .range([0, innerDimensions.height])\n    .padding(0.1)\n\n  const xProps = {\n    orient: 'Bottom',\n    scale: xScale,\n    axisLabel: xColumn,\n    axisLabelPositions: { axisLabelPositionX: width / 2, axisLabelPositionY: 60 },\n    innerHeight: innerDimensions.height,\n    axisLabelText: `Number of ${xColumn}`,\n    translate: `translate(${0},${height})`\n  }\n\n  const yProps = {\n    orient: 'Left',\n    scale: yScale,\n    translate: `translate(${0},${0})`\n  }\n\n  return (\n    <svg width={width} height={height}>\n      <g transform={`translate(${30}, ${50})`}>\n        <Axes axisProps={{ xProps, yProps }} />\n        <text x={innerDimensions.width / 2 - titleOffset} y={-20} style={{ fontSize: '1.5vw' }}>{title}</text>\n        <Bars\n          data={data}\n          columns={props.columns}\n          scales={{ xScale, yScale }}\n          id={props.id}\n        />\n      </g>\n    </svg>\n  )\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Tensor, InferenceSession, } from \"onnxjs\"\nimport ndarray from 'ndarray'\nimport ops from 'ndarray-ops'\nimport BarChart from './visionCharts/BarChart'\n// import saveAs from 'file-saver'\n\n\nvar session = new InferenceSession({ backendHint: 'webgl' })\nconst MODEL_URL = \"static/ml_models/mnist.onnx\"\n\n\nconst softMaxFunc = (ar) => {\n  const denom = ar.map(x => Math.exp(x)).reduce((a, b) => a + b)\n  const res = ar.map(x => Math.exp(x) / denom)\n  return res\n}\n\n\nexport default () => {\n\n  const canvasRef = useRef(null)\n  const canvasRefScaled = useRef(null)\n  const contextRef = useRef(null)\n  const [isDrawing, setIsDrawing] = useState(false)\n  // ****************************************\n  const defaultBarData = [\n    { pred: 0.1, category: \"0\", key: 0 },\n    { pred: 0.1, category: \"1\", key: 1 },\n    { pred: 0.1, category: \"2\", key: 2 },\n    { pred: 0.1, category: \"3\", key: 3 },\n    { pred: 0.1, category: \"4\", key: 4 },\n    { pred: 0.1, category: \"5\", key: 5 },\n    { pred: 0.1, category: \"6\", key: 6 },\n    { pred: 0.1, category: \"7\", key: 7 },\n    { pred: 0.1, category: \"8\", key: 8 },\n    { pred: 0.1, category: \"9\", key: 9 }\n  ]\n  const [barData, setBarData] = useState(defaultBarData)\n  const barColumns = { xColumn: 'pred', yColumn: 'category' }\n  const barKey = 'key'\n  const barDimensions = { width: 500, height: 400, marginBottom: 20, marginTop: 20, marginRight: 20, marginLeft: 20 }\n  const barTitle = 'Predicted Digit'\n  // ************************************************\n\n\n  // loading model\n  const loadONNXModel = async () => {\n    await session.loadModel(MODEL_URL)\n  }\n\n  useEffect(() => {\n    const dimensions = {\n      width: 340,\n      height: 340,\n      marginTop: 20,\n      marginBottom: 20,\n      marginRight: 20,\n      marginLeft: 20\n    }\n\n    const innerWidth = dimensions.width - dimensions.marginLeft - dimensions.marginRight\n    const innerHeight = dimensions.height - dimensions.marginBottom - dimensions.marginTop\n\n    const canvas = canvasRef.current\n    canvas.width = innerWidth * 3\n    canvas.height = innerHeight * 3\n\n    canvas.style.width = `${innerWidth}px`\n    canvas.style.height = `${innerHeight}px`\n\n    const canvasContext = canvas.getContext('2d')\n    canvasContext.scale(3, 3)\n    canvasContext.lineCap = 'round'\n    canvasContext.strokeStyle = 'black'\n    canvasContext.lineWidth = 20\n    contextRef.current = canvasContext\n\n    // load model\n    loadONNXModel()\n    return () => {\n      // reinitialize model otherwise exception raised : already initialized\n      session = new InferenceSession({ backendHint: 'webgl' })\n    }\n  }\n    , [])\n\n\n  const handlePredict = async () => {\n    const canvasContextScaled = canvasRefScaled.current.getContext('2d')\n    canvasContextScaled.clearRect(0, 0, contextRef.current.canvas.width, contextRef.current.canvas.height)\n    canvasContextScaled.drawImage(document.getElementById('input-img-canvas'), 0, 0, contextRef.current.canvas.width, contextRef.current.canvas.height, 0, 0, 28, 28)\n    const imgScaled = canvasContextScaled.getImageData(0, 0, canvasContextScaled.canvas.width, canvasContextScaled.canvas.height)\n    const { data, width, height } = imgScaled\n\n    const imgArray = ndarray(new Float32Array(data), [width, height, 4])\n    const inputArray = ndarray(new Float32Array(width * height * 1), [1, 1, width, height])\n    ops.assign(inputArray.pick(0, 0, null, null), imgArray.pick(null, null, 3))\n    ops.divseq(inputArray, 255)\n    ops.subseq(inputArray, 0.1307)\n    ops.divseq(inputArray, 0.3081)\n\n    const imgTensor = [\n      new Tensor(inputArray.data, 'float32', [1, 1, width, height])\n    ]\n\n    const outputMap = await session.run(imgTensor);\n    const outputTensor = outputMap.values().next().value\n    const predProba = [...softMaxFunc(outputTensor.data)]\n    const predData = predProba.map((p, idx) => ({ pred: p, category: idx.toString(), key: idx }))\n    setBarData(predData)\n  }\n\n\n  const handleClear = () => {\n    if (contextRef.current) {\n      contextRef.current.clearRect(0, 0, contextRef.current.canvas.width, contextRef.current.canvas.height)\n    }\n    setBarData(defaultBarData)\n  }\n\n  const drawingStart = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent\n\n    contextRef.current.beginPath()\n    contextRef.current.moveTo(offsetX, offsetY)\n    setIsDrawing(true)\n  }\n\n  const drawingEnd = () => {\n    contextRef.current.closePath()\n    setIsDrawing(false)\n    handlePredict()\n  }\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) return\n\n    const { offsetX, offsetY } = nativeEvent\n    contextRef.current.lineTo(offsetX, offsetY)\n    contextRef.current.stroke()\n  }\n\n  return (\n    <Grid container className='mnist-container'>\n      <Grid item xs={12} style={{ textAlign: 'center', marginBottom: '1vw' }}>\n        <Typography variant='h4' style={{ fontSize: '1.15vw' }}>\n          Digit Recognition : Draw a digit (from 0 to 9) and an embedded (in your browser)\n          AI model will try to predict the probabilities that the Drawing corresponds to each digit.\n        </Typography>\n      </Grid>\n      <Grid item xs={6} className='digit-draw' style={{ textAlign: 'center' }}>\n        <canvas\n          id='input-img-canvas'\n          className='digit-draw-canvas'\n          onMouseDown={drawingStart}\n          onMouseUp={drawingEnd}\n          onMouseMove={draw}\n          ref={canvasRef}\n        />\n        <canvas\n          height=\"28\"\n          width=\"28\"\n          style={{ display: 'none' }}\n          ref={canvasRefScaled}\n        />\n\n      </Grid>\n      <Grid item xs={6} className='digit-predict' style={{ textAlign: 'center' }}>\n        <BarChart\n          data={barData}\n          columns={barColumns}\n          dimensions={barDimensions}\n          title={barTitle}\n          id={barKey}\n        />\n      </Grid>\n      <Grid item xs={12} className='digit-predict'>\n        <div style={{ textAlign: 'center', marginBottom: '50px', marginTop: '50px' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleClear}\n          >\n            Clear Drawing\n          </Button>\n        </div>\n      </Grid>\n    </Grid>\n\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport DEmoClassi from './DEmoClassi'\nimport Mnist from './Mnist'\n\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nconst a11yProps = (index) => {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    height: '93vh',\n    marginBottom: '-50',\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport default () => {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          aria-label='scrollable auto tabs example'\n        >\n          <Tab label='Facial Expressions' {...a11yProps(0)} />\n          <Tab label='Digit Drawing' {...a11yProps(1)} />\n          {/* <Tab label='Emotion recognition' {...a11yProps(2)} /> */}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <DEmoClassi />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Mnist />\n      </TabPanel>\n      \n    </div>\n  )\n}\n","import React from 'react'\nimport * as d3 from 'd3'\nimport * as d3Axis from 'd3-axis'\n\n\nexport default class Axis extends React.Component {\n\n  componentDidMount() {\n    this.renderAxis()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.renderAxis(prevProps)\n  }\n\n  renderAxis = (prevProps) => {\n\n    // get scale and extra args\n    const orient = this.props.orient\n    const scale = this.props.scale\n    const axisLabel = this.props.axisLabel\n    const axisLabelText = this.props.axisLabelText\n\n    // Remove old labels\n    const axisClassPrefix = orient === 'Left' ? 'y' : 'x'\n    if (prevProps && prevProps.axisLabel) {\n      d3.selectAll(`text.${axisClassPrefix}axis-label-${prevProps.axisLabel}`).remove()\n    }\n\n    const allowedOrient = ['Left', 'Bottom']\n    if (!allowedOrient.includes(orient)) {\n\n      throw new Error(\"axisType must be 'Left' or 'Bottom'\")\n    }\n\n    const axisType = `axis${orient}`\n    const axis = d3Axis[axisType]()\n      .scale(scale)\n      .tickPadding([5])\n    // .ticks([])\n\n    const selectedAxis = d3.select(this.axisGroup)\n      .call(axis)\n\n    // If axisLabel prop is provided then add text label to the axis\n    if (axisLabel) {\n\n      let { axisLabelPositionX, axisLabelPositionY } = this.props.axisLabelPositions\n      axisLabelPositionX = orient === 'Left' ? -axisLabelPositionX : axisLabelPositionX\n      axisLabelPositionY = orient === 'Left' ? -axisLabelPositionY : axisLabelPositionY\n\n      selectedAxis\n        .append('text')\n        .attr('class', `${axisClassPrefix}axis-label-${axisLabel}`)\n\n      let labelTextSelector = d3.selectAll(`text.${axisClassPrefix}axis-label-${axisLabel}`)\n        .data([null])\n\n      const rotation = orient === 'Left' ? `rotate(-90)` : `rotate(0)`\n\n      labelTextSelector.enter()\n        .merge(labelTextSelector)\n        .attr('y', axisLabelPositionY)\n        .attr('x', axisLabelPositionX)\n        .attr('fill', 'black')\n        .text(axisLabelText)\n        .attr('font-family', 'sans-serif')\n        .attr('font-size', '2vmin')\n        // .attr('text-anchor', 'middle')\n        .attr('transform', rotation)\n        .exit()\n        .remove()\n\n      if (orient === 'Bottom') {\n        const innerHeight = this.props.innerHeight\n        selectedAxis.selectAll('g.tick line')\n          .attr('y2', -innerHeight)\n          .attr('opacity', 0.2)\n      } else {\n        const innerWidth = this.props.innerWidth\n        selectedAxis.selectAll('g.tick line')\n          .attr('x2', innerWidth)\n          .attr('opacity', 0.2)\n      }\n    }\n\n    // const removeTickLine = orient === 'Left' ? '.domain, .tick line' : '.domain'\n    const removeTickLine = this.props.removeTickLine\n    if (removeTickLine) {\n      selectedAxis\n        .selectAll(removeTickLine)\n        .remove()\n    }\n\n\n  }\n\n  render() {\n    const translate = this.props.translate\n    return (\n      <g\n        transform={translate}\n        ref={e => this.axisGroup = e}\n      >\n      </g>\n    )\n  }\n\n}\n","import React from 'react'\nimport Axis from './Axis'\n\nexport default ({ axisProps }) => {\n\n  const { xProps, yProps } = axisProps\n\n  return (\n    <g>\n      <Axis {...xProps} />\n      <Axis {...yProps} />\n    </g>\n  )\n\n}","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nexport default ({ data, columns, id, scales, innerWidth, innerHeight, clickedCategory, setClickedCategory }) => {\n\n  const circlesGroup = useRef(null)\n\n  // data and labels\n  const { xColumn, yColumn, catColumn } = columns\n  // scales\n  const { xScale, yScale, colorScale } = scales\n  const animationDuration = 750\n  const unselectOpacity = 0.05\n\n  \n  useEffect(\n    () => {\n      if (circlesGroup.current) {\n        // create data join\n\n        // Define the global group containing circles, title and \n        let scatterGroup = d3.select(circlesGroup.current).selectAll('.unique-group')\n          .data(data, d => d[id])\n        scatterGroup.exit().remove()\n        let globalEnter = scatterGroup.enter().append('g').attr('class', 'unique-group')\n\n        scatterGroup = scatterGroup.merge(globalEnter)\n\n        // Add circles\n        globalEnter\n          .append('circle')\n          .attr('class', 'circle-class')\n          .attr('cx', innerWidth / 2)\n          .attr('cy', innerHeight / 2)\n          .attr('r', 0)\n          .on('click', d => setClickedCategory(d[catColumn]))\n          .on('mouseover', function (d) {\n            d3.select(this)\n              .transition().duration(250)\n              // .attr('fill', 'black')\n              // .attr('r', 15)\n              .attr('r', '0.75em')\n          })\n          .on('mouseout', function (d) {\n            d3.select(this)\n              .transition().duration(250)\n              // .attr('r', 10)\n              .attr('r', '0.5em')\n              // .attr('fill', colorScale(d[catColumn]))\n          })\n\n        // Add hover title\n        globalEnter\n          .append('title')\n          .attr('class', 'title-class')\n          .text(d => `(${d[xColumn]}, ${d[yColumn]})`)\n\n        // add transition for animating circle\n        scatterGroup.select('.circle-class')\n          .transition().duration(animationDuration)\n          .delay((d, i) => i * 10)\n          .attr('cx', d => xScale(d[xColumn]))\n          .attr('cy', d => yScale(d[yColumn]))\n          // .attr('r', 10)\n          .attr('r', '0.5em')\n          .attr('fill', d => colorScale(d[catColumn]))\n          .attr('fill-opacity', d =>\n            clickedCategory ?\n              d[catColumn] === clickedCategory ? 0.7 : unselectOpacity\n              :\n              0.7\n          )\n\n        scatterGroup.select('.title-class')\n          .text(d => `(${d[xColumn]}, ${d[yColumn]})`)\n\n\n\n        // Adding Legend\n        const legendRadius = 33\n        const spacing = 30\n        // const legendYOffset = 170\n        const n = colorScale.domain().length\n        const legendGroup = d3.select(circlesGroup.current).selectAll('rect').data([null])\n        legendGroup.enter().append('rect')\n          .merge(legendGroup)\n          .attr('x', -legendRadius * 2)\n          .attr('y', -legendRadius * 2)\n          .attr('rx', 10)\n          // .attr('width', 135)\n          .attr('width', innerWidth*0.15)\n          .attr('height', spacing * n + legendRadius * 1.25)\n          .attr('fill', 'black')\n          .attr('opacity', 0.1)\n          // .attr('transform', `translate(850, ${legendYOffset})`)\n          .attr('transform', `translate(${innerWidth * 1.06}, ${innerHeight*0.11})`)\n\n\n        let legendCircles = d3.select(circlesGroup.current).selectAll('.circle-tick').data(colorScale.domain())\n        legendCircles.exit().remove()\n        \n        let legendCirclesEnter = legendCircles.enter()\n          .append('g')\n          .attr('class', 'circle-tick')\n          // .attr('transform', (d, i) => `translate(800, ${i * spacing + legendYOffset - 30})`)\n          .attr('transform', (d, i) => `translate(${innerWidth * 1.02}, ${i * spacing + innerHeight*0.06})`)\n\n        legendCircles = legendCircles.merge(legendCirclesEnter)\n        \n        // move legend circles on resize\n        legendCircles.select('.circle-tick')\n          .merge(legendCircles)\n          .transition()\n          .attr('transform', (d, i) => `translate(${innerWidth * 1.02}, ${i * spacing + innerHeight*0.06})`)\n          \n        \n        legendCirclesEnter.append('circle')\n          .attr('class', 'circle-legend')\n          .attr('r', 10)\n          .attr('fill', colorScale)\n          .attr('opacity', 0.8)\n          .on('click', setClickedCategory)\n        legendCircles.select('.circle-legend')\n          .transition().duration(animationDuration)\n          .attr('opacity',\n            d => clickedCategory ?\n              clickedCategory === d ? 0.8 : unselectOpacity\n              : 0.8\n          )\n\n        legendCirclesEnter.append('text')\n          .attr('class', 'text-legend')\n          .text(d => d)\n          .attr('dy', '0.32em')\n          .style(\"font-size\", \"2.0vmin\")\n          .attr('x', 20)\n          .on('click', setClickedCategory)\n        legendCircles.select('.text-legend')\n          .transition().duration(animationDuration)\n          .attr('opacity',\n            d => clickedCategory ?\n              clickedCategory === d ? 1.0 : 0.2\n              : 1.0\n          )\n\n      }\n\n    },\n    [circlesGroup, catColumn, data, innerWidth, innerHeight, id, xScale, xColumn, yScale, yColumn, colorScale, setClickedCategory, clickedCategory]\n  )\n\n  return (\n    <g ref={circlesGroup} >\n    </g>\n  )\n}","export const rowProcessor = (row) => {\n  row.PetalLengthCm = +row.PetalLengthCm\n  row.PetalWidthCm = +row.PetalWidthCm\n  row.SepalLengthCm = +row.SepalLengthCm\n  row.SepalWidthCm = +row.SepalWidthCm\n  return row\n}\n\nexport const removeChildrenNodes = (node) => {\n  var child = node.lastElementChild\n  while (child) {\n    node.removeChild(child)\n    child = node.lastElementChild\n  }\n}\n","import React from 'react'\nimport * as d3 from 'd3'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Axes from './Axes'\nimport ScatterCircles from './ScatterCircles'\nimport { rowProcessor } from '../irisUtils'\n\n\nconst formControlStyle = {\n  marginLeft: '5em',\n  marginRight: '5em',\n  minWidth: 120,\n  height: '4vmin'\n}\n\nconst inputLabelStyle = {\n  fontSize: \"1.5em\",\n  paddingBottom: \"5vmin\"\n}\n\n\nconst getDimensions = () => {\n\n  // const width = window.innerWidth * 0.90\n  // const height = window.innerHeight * 0.60\n  // const margins = { left: width*0.07, right: width*0.15, top: height*0.084, bottom: height*0.084 }\n  // const innerWidth = width - margins.left - margins.right\n  // const innerHeight = height - margins.top - margins.bottom\n\n\n  const width = window.innerWidth * 0.9\n  const height = window.innerHeight * 0.55\n  const margins = { left: width*0.07, right: width*0.12, top: height*0.084, bottom: height*0.084 }\n  const innerWidth = width - margins.left - margins.right\n  const innerHeight = height - margins.top - margins.bottom\n\n  const dimensions = {\n    width,\n    height,\n    margins,\n    innerWidth,\n    innerHeight\n  }\n  return dimensions\n}\n\n\nexport default class IrisAnimated extends React.Component {\n\n  constructor(props) {\n\n    super(props)\n\n    this.state = {\n      data: null,\n      xColumn: 'PetalLengthCm',\n      yColumn: 'PetalWidthCm',\n      clickedCategory: null,\n      dimensions: getDimensions()\n    }\n  }\n\n  componentDidMount() {\n\n    window.addEventListener('resize', this.handleResize)\n\n    d3.csv('static/data/Iris.csv', rowProcessor).then(data => {\n      this.setState((prevState, prevProps) => (\n        {\n          ...prevState,\n          data,\n        }\n      )\n      )\n    }\n    )\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  handleResize = () => {\n    const dimensions = getDimensions()\n    this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          dimensions\n        })\n      )\n  }\n\n\n  // getDimensions = () => {\n\n  //   const width = 1000\n  //   const height = 600\n  //   const margins = { left: 70, right: 150, top: 50, bottom: 50 }\n  //   const innerWidth = width - margins.left - margins.right\n  //   const innerHeight = height - margins.top - margins.bottom\n\n  //   const dimensions = {\n  //     width,\n  //     height,\n  //     margins,\n  //     innerWidth,\n  //     innerHeight\n  //   }\n  //   return dimensions\n  // }\n\n\n  handleXColumnChange = (event) => {\n    if (event.target.value !== this.state.xColumn) {\n      this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          xColumn: event.target.value\n        })\n      )\n    }\n  }\n\n  handleYColumnChange = (event) => {\n    if (event.target.value !== this.state.yColumn) {\n      this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          yColumn: event.target.value\n        })\n      )\n    }\n  }\n\n  setClickedCategory = (cat) => {\n    this.setState(\n      (prevState, props) => {\n        if (prevState.clickedCategory === cat) {\n          return {\n            ...prevState,\n            clickedCategory: null\n          }\n        }\n        return {\n          ...prevState,\n          clickedCategory: cat\n        }\n\n      }\n    )\n\n  }\n\n  render() {\n    const listColumns = ['PetalLengthCm', 'PetalWidthCm', 'SepalLengthCm', 'SepalWidthCm']\n    if (this.state.data) {\n\n      // const dimensions = this.getDimensions()\n      const dimensions = this.state.dimensions\n\n      const xExtent = d3.extent(this.state.data.map(d => d[this.state.xColumn]))\n      const yExtent = d3.extent(this.state.data.map(d => d[this.state.yColumn]))\n      const colorExtent = [...new Set(this.state.data.map(d => d.Species))]\n\n      const xScale = d3.scaleLinear().domain(xExtent).range([0, dimensions.innerWidth]).nice()\n      const yScale = d3.scaleLinear().domain(yExtent).range([dimensions.innerHeight, 0]).nice()\n      const colorScale = d3.scaleOrdinal().domain(colorExtent).range(['red', 'steelblue', 'green'])\n\n      const xProps = {\n        orient: 'Bottom',\n        scale: xScale,\n        axisLabel: this.state.xColumn,\n        axisLabelText: `${this.state.xColumn}`,\n        axisLabelPositions: { axisLabelPositionX: dimensions.innerWidth / 2,\n           axisLabelPositionY: dimensions.innerHeight/11 },\n        innerHeight: dimensions.innerHeight,\n        removeTickLine: '.domain',\n        translate: `translate(${0},${dimensions.innerHeight})`,\n      }\n\n      const yProps = {\n        orient: 'Left',\n        scale: yScale,\n        axisLabel: this.state.yColumn,\n        axisLabelText: `${this.state.yColumn}`,\n        axisLabelPositions: { axisLabelPositionX: dimensions.innerWidth / 6, axisLabelPositionY: dimensions.innerHeight / 11 },\n        innerWidth: dimensions.innerWidth,\n        removeTickLine: '.domain',\n        translate: `translate(${0},${0})`,\n      }\n      \n      return (\n\n        <Grid container className='iris-grid-container'>\n          <Grid item xs={12} style={{ textAlign: 'center', marginBottom: '0.5em' }}>\n            <Typography variant='h6' style={{ fontSize: '1.0em' }}>\n              Change interactively X or Y axis using dropdown Menus. Hover on a given point to display (x, y) \n              values.\n              Click on any point from plot or legend highlight all points from the same color. Click again to unselect\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className='iris-form-container'>\n            <FormControl style={formControlStyle}>\n              <InputLabel id=\"demo-simple-select-label\" style={inputLabelStyle}>X Axis</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={this.state.xColumn}\n                onChange={this.handleXColumnChange}\n              >\n                {listColumns.map(\n                  col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n            <FormControl style={formControlStyle}>\n              <InputLabel id=\"demo-simple-select-label\" style={inputLabelStyle}>Y Axis</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={this.state.yColumn}\n                onChange={this.handleYColumnChange}\n              >\n                {listColumns.map(\n                  col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            className='iris-plot-container'\n          >\n            {\n              this.state.data &&\n              <svg width={dimensions.width} height={dimensions.height}>\n                <g transform={`translate(${dimensions.margins.left}, ${dimensions.margins.top})`}>\n                  <Axes\n                    axisProps={{ xProps, yProps }}\n                  />\n\n                  <text x={dimensions.width*0.25} y={-dimensions.height/27} fontSize='1.25em' >{'Iris Scatter Plot'}</text>\n\n                  <ScatterCircles\n                    data={this.state.data}\n                    columns={{ xColumn: this.state.xColumn, yColumn: this.state.yColumn, catColumn: 'Species' }}\n                    scales={{ xScale: xScale, yScale: yScale, colorScale: colorScale }}\n                    id='Id'\n                    innerWidth={dimensions.innerWidth}\n                    innerHeight={dimensions.innerHeight}\n                    clickedCategory={this.state.clickedCategory}\n                    setClickedCategory={this.setClickedCategory}\n                  />\n                </g>\n              </svg>\n\n            }\n          </Grid>\n\n        </Grid>\n\n      )\n\n    }\n\n    return (\n\n      <Grid container >\n        <Grid \n          item\n          xs={12} \n          // style={{ height: '200px' }}\n        >\n          <FormControl style={formControlStyle}>\n            <InputLabel id=\"demo-simple-select-label\">X column</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.xColumn}\n              onChange={this.handleXColumnChange}\n            >\n              {listColumns.map(\n                col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n              )}\n            </Select>\n          </FormControl>\n          <FormControl style={formControlStyle}>\n            <InputLabel id=\"demo-simple-select-label\">Y Column</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.yColumn}\n              onChange={this.handleYColumnChange}\n            >\n              {listColumns.map(\n                col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n        >\n\n        </Grid>\n\n      </Grid>\n\n    )\n\n  }\n\n\n}","import React, { useRef, useEffect } from 'react'\nimport {\n  zoom,\n  select,\n  event\n} from 'd3'\nimport {\n  Scene,\n  Object3D,\n  PerspectiveCamera,\n  WebGLRenderer,\n  CanvasTexture,\n  Sprite,\n  SpriteMaterial\n} from 'three'\nimport { removeChildrenNodes } from '../irisUtils'\n\nexport default ({ data, xScale, yScale, zScale, colorScale, xColumn, yColumn, zColumn }) => {\n\n  const myContainer = useRef(null)\n\n  useEffect(\n    () => {\n      if (myContainer.current) {\n\n        // remove the canvas if it exists ==> because at each re-render a new canvas is appended\n        var divElement = document.getElementById('iris-3d-div')\n        removeChildrenNodes(divElement)\n\n        // Tweakables\n\n        // const width = 800\n        // const height = 700\n        const width = window.innerWidth*0.75\n        const height = window.innerHeight * 0.60\n        const circleSize = 0.10\n        const circleOpacity = 0.9\n        const circleStrokeWidth = 0.7 //0.5\n        const cameraDistance = 2.5 // 2.3\n        const rotationSensitivity = 0.009 //0.004\n        const rotationIncrement = -0.2//-0.2\n\n        // Generates a circle sprite for the given color.\n        // Inspired by https://takahirox.github.io/three.js/examples/canvas_particles_sprites.html\n        const generateSprite = color => {\n          const canvas = document.createElement('canvas')\n          const side = 64\n          const radius = side / 2 - 4\n          canvas.width = side\n          canvas.height = side\n\n          const context = canvas.getContext('2d')\n\n          // Draw a circle on the canvas\n          context.beginPath()\n          context.arc(side / 2, side / 2, radius, 0, 2 * Math.PI, false)\n          context.globalAlpha = circleOpacity\n          context.fillStyle = color\n          context.fill()\n          context.lineWidth = circleStrokeWidth\n          context.strokeStyle = 'black'\n          context.stroke()\n\n          return canvas\n        }\n\n\n        // Cache materials for colors.\n        const materials = {}\n        const material = color => {\n          if (!materials[color]) {\n            materials[color] = new SpriteMaterial({\n              map: new CanvasTexture(generateSprite(color))\n            })\n          }\n          return materials[color]\n        }\n\n        const scene = new Scene()\n        const camera = new PerspectiveCamera(75, width / height, 0.1, 1000)\n\n        const renderer = new WebGLRenderer({ alpha: true })\n        renderer.setSize(width, height)\n\n        myContainer.current.appendChild(renderer.domElement)\n\n        const root = new Object3D()\n        scene.add(root)\n        camera.position.z = cameraDistance\n\n        // Set up rotation interaction.\n        const rotationInteraction = zoom()\n\n        // Disable zoom, only use panning.\n        rotationInteraction.scaleExtent([1, 1])\n\n        // Limit panning so it can't go beyond the north and south poles.\n        // Without this, moving the mouse right and left could cause\n        // undesirable inverse rotation.\n        rotationInteraction.translateExtent([\n          [-Infinity, -Math.PI / 2 / rotationSensitivity],\n          [Infinity, height + Math.PI / 2 / rotationSensitivity]\n        ])\n\n        // Update scenegraph root rotation on pan.\n        rotationInteraction.on('zoom', () => {\n          root.rotation.y = event.transform.x * rotationSensitivity\n          root.rotation.x = event.transform.y * rotationSensitivity\n        })\n\n        // Set up the interaction to respond to the DOM events.\n        const rotationSelection = select(renderer.domElement).call(rotationInteraction)\n\n        // Initialize rotation\n        rotationInteraction.translateBy(rotationSelection, 0, 0)\n\n        // Rotate slowly all the time.\n        const animate = () => {\n          requestAnimationFrame(animate)\n          rotationInteraction.translateBy(rotationSelection, rotationIncrement, 0)\n          renderer.render(scene, camera)\n        }\n        animate()\n\n        const addSprite = ({ x, y, z, color }) => {\n          const sprite = new Sprite(material(color))\n          sprite.position.x = x\n          sprite.position.y = y\n          sprite.position.z = z\n          sprite.scale.set(circleSize, circleSize, 1)\n          root.add(sprite)\n        }\n\n\n        data\n          .map(d => ({\n            x: xScale(d[xColumn]),\n            y: yScale(d[yColumn]),\n            z: zScale(d[zColumn]),\n            color: colorScale(d['Species'])\n          }))\n          .forEach(addSprite)\n\n\n      }\n    }\n  )\n\n  return (\n\n    <div ref={myContainer} id='iris-3d-div' className='iris-3d-div'>\n    </div>\n  )\n}\n","import React from 'react'\nimport * as d3 from 'd3'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Grid from '@material-ui/core/Grid'\nimport { rowProcessor } from '../irisUtils'\nimport Scatter3D from './Scatter3D'\n\n\nconst formControlStyle = {\n  marginLeft: '5em',\n  marginRight: '5em',\n  minWidth: 120,\n  height: '200px'\n}\n\n\nexport default class Iris3D extends React.Component {\n\n  constructor(props) {\n\n    super(props)\n\n    this.state = {\n      data: null,\n      xColumn: 'PetalLengthCm',\n      yColumn: 'PetalWidthCm',\n      zColumn: 'SepalLengthCm',\n      xScale: null,\n      yScale: null,\n      zScale: null,\n      colorScale: null,\n      clickedCategory: null\n    }\n  }\n\n  componentDidMount() {\n\n    d3.csv('static/data/Iris.csv', rowProcessor).then(data => {\n\n      const xExtent = d3.extent(data.map(d => d[this.state.xColumn]))\n      const yExtent = d3.extent(data.map(d => d[this.state.yColumn]))\n      const zExtent = d3.extent(data.map(d => d[this.state.zColumn]))\n      const colorExtent = [...new Set(data.map(d => d.Species))]\n\n      const xScale = d3.scaleLinear().domain(xExtent).range([-1, 1])\n      const yScale = d3.scaleLinear().domain(yExtent).range([-1, 1])\n      const zScale = d3.scaleLinear().domain(zExtent).range([-1, 1])\n      const colorScale = d3.scaleOrdinal().domain(colorExtent).range(['red', 'steelblue', 'green'])\n\n      this.setState((prevState, prevProps) => (\n        {\n          ...prevState,\n          data,\n          xScale,\n          yScale,\n          zScale,\n          colorScale\n        }\n      )\n      )\n    }\n    ).then(() => {\n      this.drawLegend(this.state.colorScale)\n    })\n\n  }\n\n  componentDidUpdate() {\n    this.drawLegend(this.state.colorScale)\n  }\n\n  handleXColumnChange = (event) => {\n    if (event.target.value !== this.state.xColumn) {\n      this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          xColumn: event.target.value\n        })\n      )\n    }\n  }\n\n  handleYColumnChange = (event) => {\n    if (event.target.value !== this.state.yColumn) {\n      this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          yColumn: event.target.value\n        })\n      )\n    }\n  }\n\n  handleZColumnChange = (event) => {\n    if (event.target.value !== this.state.zColumn) {\n      this.setState((prevState, props) =>\n        ({\n          ...prevState,\n          zColumn: event.target.value\n        })\n      )\n    }\n  }\n\n  setClickedCategory = (cat) => {\n    this.setState(\n      (prevState, props) => {\n        if (prevState.clickedCategory === cat) {\n          return {\n            ...prevState,\n            clickedCategory: null\n          }\n        }\n        return {\n          ...prevState,\n          clickedCategory: cat\n        }\n\n      }\n    )\n\n  }\n\n  drawLegend = (colorScale) => {\n    // Adding Legend\n    const legendRadius = 30\n    const spacing = 30\n    const legendYOffset = 50\n    const n = colorScale.domain().length\n    const legendGroup = d3.select('.legend-group-3d').selectAll('rect').data([null])\n    legendGroup.enter().append('rect')\n      .merge(legendGroup)\n      .attr('x', -legendRadius * 2)\n      .attr('y', -legendRadius * 2)\n      .attr('rx', 10)\n      .attr('width', 135)\n      .attr('height', spacing * n + legendRadius * 0.7)\n      .attr('fill', 'black')\n      .attr('opacity', 0.1)\n      .attr('transform', `translate(60, ${legendYOffset + 20})`)\n\n\n    let legendCircles = d3.select('.legend-group-3d').selectAll('.circle-tick-3d').data(colorScale.domain())\n    legendCircles.exit().remove()\n\n    let legendCirclesEnter = legendCircles.enter()\n      .append('g')\n      .attr('class', 'circle-tick-3d')\n      .attr('transform', (d, i) => `translate(12, ${i * spacing + legendYOffset - 17})`)\n\n    legendCircles = legendCircles.merge(legendCirclesEnter)\n\n    legendCirclesEnter.append('circle')\n      .attr('r', 10)\n      .attr('fill', colorScale)\n      .attr('opacity', 0.8)\n\n    legendCirclesEnter.append('text')\n      .attr('class', 'text-legend')\n      .text(d => d)\n      .attr('dy', '0.32em')\n      .attr('x', 20)\n  }\n\n\n\n  render() {\n    const listColumns = ['PetalLengthCm', 'PetalWidthCm', 'SepalLengthCm', 'SepalWidthCm']\n    if (this.state.data) {\n\n\n      const xExtent = d3.extent(this.state.data.map(d => d[this.state.xColumn]))\n      const yExtent = d3.extent(this.state.data.map(d => d[this.state.yColumn]))\n      const zExtent = d3.extent(this.state.data.map(d => d[this.state.zColumn]))\n      const colorExtent = [...new Set(this.state.data.map(d => d.Species))]\n\n      const xScale = d3.scaleLinear().domain(xExtent).range([-1, 1])\n      const yScale = d3.scaleLinear().domain(yExtent).range([-1, 1])\n      const zScale = d3.scaleLinear().domain(zExtent).range([-1, 1])\n\n      const colorScale = d3.scaleOrdinal().domain(colorExtent).range(['red', 'steelblue', 'green'])\n\n\n\n      return (\n\n        <Grid container >\n          <Grid item xs={12} className='iris3d-form-container' style={{ marginBottom: '0px' }}>\n            <FormControl style={formControlStyle}>\n              <InputLabel id=\"demo-simple-select-label\">X Axis</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={this.state.xColumn}\n                onChange={this.handleXColumnChange}\n              >\n                {listColumns.map(\n                  col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n            <FormControl style={formControlStyle}>\n              <InputLabel id=\"demo-simple-select-label\">Y Axis</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={this.state.yColumn}\n                onChange={this.handleYColumnChange}\n              >\n                {listColumns.map(\n                  col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n            <FormControl style={formControlStyle}>\n              <InputLabel id=\"demo-simple-select-label\">Z Axis</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={this.state.zColumn}\n                onChange={this.handleZColumnChange}\n              >\n                {listColumns.map(\n                  col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            item\n            xs={8}\n            className='iris3d-plot-container'\n          >\n            <Scatter3D\n              data={this.state.data}\n              xScale={xScale}\n              yScale={yScale}\n              zScale={zScale}\n              colorScale={colorScale}\n              xColumn={this.state.xColumn}\n              yColumn={this.state.yColumn}\n              zColumn={this.state.zColumn}\n            />\n          </Grid>\n          <Grid item xs={4} className='legend-container-3d'>\n            <svg height={150} width={300}>\n              <g className='legend-group-3d'>\n              </g>\n            </svg>\n          </Grid>\n\n        </Grid>\n\n      )\n\n    }\n\n    return (\n\n      <Grid container >\n        <Grid item xs={12} style={{ height: '200px' }}>\n          <FormControl style={formControlStyle}>\n            <InputLabel id=\"demo-simple-select-label\">X column</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.xColumn}\n              onChange={this.handleXColumnChange}\n            >\n              {listColumns.map(\n                col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n              )}\n            </Select>\n          </FormControl>\n          <FormControl style={formControlStyle}>\n            <InputLabel id=\"demo-simple-select-label\">Y Column</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.yColumn}\n              onChange={this.handleYColumnChange}\n            >\n              {listColumns.map(\n                col => (<MenuItem value={col} key={col}>{col}</MenuItem>)\n              )}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n        >\n\n        </Grid>\n\n      </Grid>\n\n    )\n  }\n}","import React from 'react'\nimport * as d3 from 'd3'\nimport Button from '@material-ui/core/Button'\nimport PlayArrow from '@material-ui/icons/PlayArrow'\nimport Pause from '@material-ui/icons/PauseCircleFilled'\nimport Stop from '@material-ui/icons/Stop'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\nimport { rowProcessor } from '../irisUtils'\n\nconst tSNEJs = require('../../../../externalLibs/tsne')\nfunction myDelayer(ms) {\n  return new Promise(res => setTimeout(res, ms))\n}\n\n\nexport default class IrisAnimated extends React.Component {\n\n  constructor(props) {\n\n    super(props)\n\n    this.state = {\n      data: null,\n      dataTSNE: null,\n      plotContainer: null,\n      colorScale: null,\n      isPlaying: false,\n      tsne: null,\n      circleGroup: null,\n      initialPerplexity: 10,\n      initialEpsilon: 10\n    }\n  }\n\n  componentDidMount() {\n\n    const dimensions = this.getDimensions()\n\n    d3.csv('static/data/Iris.csv', rowProcessor).then(data => {\n\n      const dataTSNE = data.map(d => ({ id: d.Id, x: Math.random(), y: Math.random(), Species: d.Species }))\n\n      const colorExtent = [...new Set(dataTSNE.map(d => d.Species))]\n      const colorScale = d3.scaleOrdinal().domain(colorExtent).range(['red', 'steelblue', 'green'])\n\n\n      const tsne = new tSNEJs.tSNE(\n        {\n          epsilon: 10,\n          perplexity: 10,\n          dim: 2\n        }\n      )\n      tsne.initDataRaw(\n        data.map(d => ([d.PetalLengthCm, d.PetalWidthCm, d.SepalLengthCm, d.SepalWidthCm]))\n      )\n\n      var circleGroup = d3.select('.iris-tsne-plot-container')\n        .selectAll('.circle-tsne-group')\n        .data(dataTSNE, d => d.id)\n\n      // Exit \n      circleGroup.exit().remove()\n\n      // Enter / update\n      var circleGroupEnter = circleGroup.enter()\n        .append('g')\n        .attr('class', 'circle-tsne-group')\n\n      circleGroup = circleGroup.merge(circleGroupEnter)\n\n      circleGroupEnter.append('circle')\n        .attr('class', 'circle-tsne-point')\n        .attr('cx', dimensions.innerWidth / 2)\n        .attr('cy', dimensions.innerHeight / 2)\n        .attr('r', 0)\n\n      const embeddings = tsne.getSolution()\n      const xExtent = d3.extent(embeddings.map(d => d[0]))\n      const yExtent = d3.extent(embeddings.map(d => d[1]))\n\n      const xScale = d3.scaleLinear().domain(xExtent).range([5, dimensions.innerWidth - 5])\n      const yScale = d3.scaleLinear().domain(yExtent).range([dimensions.innerHeight - 5, 5])\n\n      circleGroup.select('.circle-tsne-point')\n        .transition().duration(1000)\n        .delay((d, i) => i * 10)\n        .attr('cx', (d, i) => xScale(embeddings[i][0]))\n        .attr('cy', (d, i) => yScale(embeddings[i][1]))\n        .attr('r', 10)\n        .attr('fill', d => colorScale(d.Species))\n        .attr('fill-opacity', 0.8)\n\n      this.setState((prevState, prevProps) => (\n        {\n          ...prevState,\n          data,\n          dataTSNE,\n          xScale,\n          yScale,\n          colorScale,\n          tsne,\n          circleGroup\n        }\n      )\n      )\n    }\n    )\n\n  }\n\n  componentDidUpdate() {\n\n    this.drawCircles()\n  }\n\n\n  getDimensions = () => {\n    // const width = 1000\n    // const height = 600\n    const width = window.innerWidth * 0.65\n    const height = window.innerHeight * 0.6\n    const margins = { left: 70, right: 150, top: 50, bottom: 50 }\n    const innerWidth = width - margins.left - margins.right\n    const innerHeight = height - margins.top - margins.bottom\n\n    const dimensions = {\n      width,\n      height,\n      margins,\n      innerWidth,\n      innerHeight\n    }\n    return dimensions\n  }\n\n  handlePlayClick = () => {\n    this.setState(\n      (prevState, props) => (\n        {\n          ...prevState,\n          isPlaying: !prevState.isPlaying\n        }\n      )\n    )\n  }\n\n  handleResetClick = () => {\n    this.setState(\n      (prevState, props) => {\n        const tsne = new tSNEJs.tSNE(\n          {\n            epsilon: 10,\n            perplexity: 10,\n            dim: 2\n          }\n        )\n        tsne.initDataRaw(prevState.data.map(d => ([d.PetalLengthCm, d.PetalWidthCm, d.SepalLengthCm, d.SepalWidthCm])))\n\n        const embeddings = tsne.getSolution()\n        const { xScale, yScale } = this.computeScales(embeddings)\n\n        prevState.circleGroup.select('.circle-tsne-point')\n          .transition().duration(1000)\n          .delay((d, i) => i * 10)\n          .attr('cx', (d, i) => xScale(embeddings[i][0]))\n          .attr('cy', (d, i) => yScale(embeddings[i][1]))\n          .attr('r', 10)\n          .attr('fill', d => prevState.colorScale(d.Species))\n          .attr('fill-opacity', 0.8)\n\n        return {\n          ...prevState,\n          isPlaying: false,\n          initialPerplexity: 10,\n          initialEpsilon: 10,\n          tsne\n        }\n      }\n\n    )\n  }\n\n  handleSliderChange = (param, value) => {\n    this.setState(\n      (prevState, props) => {\n        const tsne = prevState.tsne\n        tsne[param] = value\n        return {\n          ...prevState,\n          isPlaying: false,\n          tsne\n        }\n      }\n    )\n  }\n\n  computeScales = (data) => {\n    const dimensions = this.getDimensions()\n    const xExtent = d3.extent(data.map(d => d[0]))\n    const yExtent = d3.extent(data.map(d => d[1]))\n\n    const xScale = d3.scaleLinear().domain(xExtent).range([5, dimensions.innerWidth - 5])\n    const yScale = d3.scaleLinear().domain(yExtent).range([dimensions.innerHeight - 5, 5])\n\n    return { xScale, yScale }\n  }\n\n  drawCircles = () => {\n\n    const animate = async () => {\n      while (this.state.isPlaying) {\n\n        this.state.tsne.step()\n        // console.log('iter '+this.state.tsne['iter']+' perp '+this.state.tsne['perplexity']+' lr '+this.state.tsne['epsilon'])\n        const embeddings = this.state.tsne.getSolution()\n        const { xScale, yScale } = this.computeScales(embeddings)\n\n        this.state.circleGroup.select('.circle-tsne-point')\n          .transition().duration(1000)\n          .delay((d, i) => i * 10)\n          .attr('cx', (d, i) => xScale(embeddings[i][0]))\n          .attr('cy', (d, i) => yScale(embeddings[i][1]))\n          .attr('r', 10)\n          .attr('fill', d => this.state.colorScale(d.Species))\n          .attr('fill-opacity', 0.8)\n        await myDelayer(1020)\n      }\n    }\n\n    animate()\n\n  }\n\n  render() {\n    const dimensions = this.getDimensions()\n\n    return (\n\n      <Grid container className='iris-grid-container-tsne'>\n        <Grid item xs={12} style={{ textAlign: 'center', marginBottom: '2vw' }}>\n          <Typography variant='h6' style={{ fontSize: '1.1vw' }}>\n            This program runs interactively t-SNE to reduce iris 4-dimensional dataset to 2 dimensions.\n        </Typography>\n          <Typography variant='h6' style={{ fontSize: '1.1vw' }}>\n            t-SNE hyperparameters can be set using the left-side interactive widgets. Press Play to start ...\n        </Typography>\n        </Grid>\n\n        <Grid item xs={4} >\n          <div className='iris-form-container-tsne'>\n            <div style={{ textAlign: 'left', marginBottom: '50px', marginTop: '50px' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={this.state.isPlaying ? <Pause /> : <PlayArrow />}\n                onClick={this.handlePlayClick}\n                style={{ marginRight: '50px' }}\n              >\n                {this.state.isPlaying ? 'Pause' : 'Play'}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<Stop />}\n                onClick={this.handleResetClick}\n              >\n                Reset\n            </Button>\n            </div>\n            <div style={{ width: '200px', alignContent: 'center', textAlign: 'center' }}>\n              <Typography id=\"discrete-slider\" gutterBottom>\n                Learning Rate\n          </Typography>\n              <Slider\n                defaultValue={this.state.initialEpsilon}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks\n                min={1}\n                max={20}\n                onChangeCommitted={(event, value) => this.handleSliderChange('epsilon', value)}\n              />\n            </div>\n            <div style={{ width: '200px', alignContent: 'center', textAlign: 'center' }}>\n              <Typography id=\"discrete-slider\" gutterBottom>\n                Perplexity\n          </Typography>\n              <Slider\n                defaultValue={this.state.initialPerplexity}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={5}\n                marks\n                min={5}\n                max={100}\n                onChangeCommitted={(event, value) => this.handleSliderChange('perplexity', value)}\n              />\n            </div>\n          </div>\n        </Grid>\n\n        <Grid\n          item\n          xs={8}\n          className='iris-plot-grid-tsne'\n        >\n          <svg width={dimensions.width} height={dimensions.height}>\n            <g className='iris-tsne-plot-container'>\n            </g>\n          </svg>\n\n        </Grid>\n\n      </Grid>\n\n    )\n\n  }\n\n\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport IrisAnimated from './iris/2D/IrisAnimated'\nimport Iris3D from './iris/3D/Iris3DAnimated'\nimport IrisTsne from './iris/tSNE/IrisTsne'\n\n\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nconst a11yProps = (index) => {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    height: '100%',\n    // height: '93vh',\n    // marginBottom: '-50',\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport default () => {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          aria-label='scrollable auto tabs example'\n        >\n          <Tab label='Iris 2D Interactive' {...a11yProps(0)} />\n          <Tab label='Iris 3D Animated' {...a11yProps(1)} />\n          <Tab label='IRIS t-SNE plot' {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <IrisAnimated />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Iris3D />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <IrisTsne/>\n      </TabPanel>\n    </div>\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n\nexport default () => {\n  return (\n    <Grid container className='nlp-placeholder-container'>\n      <Grid item xs={12} className='nlp-placeholder-circular' style={{ textAlign: 'center' }}>\n        <CircularProgress size='15em' />\n      </Grid>\n      <Grid item xs={12} className='nlp-placeholder-circular' style={{ textAlign: 'center' }}>\n        <Typography variant='h4' style={{ fontSize: '1.25vw', marginBottom: '10px', marginTop: '50px' }}>\n          Work In Progress <span role=\"img\" aria-label=\"desc\">☕☕☕</span>\n        </Typography>\n      </Grid>\n    </Grid>)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport PlaceHolder from './PlaceHolder'\n\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nconst a11yProps = (index) => {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    height: '93vh',\n    marginBottom: '-50',\n    backgroundColor: theme.palette.background.paper,\n  },\n}))\n\nexport default () => {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          aria-label='scrollable auto tabs example'\n        >\n          <Tab label='WIP' {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <PlaceHolder />\n      </TabPanel>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ScatterIcon from '@material-ui/icons/ScatterPlot'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport HomePage from './HomePage'\nimport Resume from './resume/Resume'\nimport VisionPage from './vision/VisionPage'\nimport ScatterPlotPage from './scatterPlots/ScatterPlotPage'\nimport NLPPage from './nlp/NLPPage'\n\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  menuIcons: {\n    fontSize: '2em',\n    color: '#19e9e9'\n  }\n}))\n\nexport default () => {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n  const [activeMenu, setActiveMenu] = React.useState('home')\n\n  const handleDrawerOpen = () => setOpen(true)\n\n  const handleDrawerClose = () => setOpen(false)\n\n  const handleClickAway = () => {\n    if (open) {\n      setOpen(!open)\n    }\n\n  }\n\n  const handleMenuChange = (menu) => {\n    if (activeMenu === menu) return\n    setActiveMenu(menu)\n  }\n\n\n  const toggleMenu = () => {\n    if (activeMenu === 'home') {\n      return (<HomePage />)\n    } else if (activeMenu === \"resume\") {\n      return (<Resume />)\n    } else if (activeMenu === 'scatter') {\n      return (<ScatterPlotPage />)\n    } else if (activeMenu === 'cv') {\n      return (<VisionPage />)\n    } else if (activeMenu === 'nlp') {\n      return (<NLPPage />)\n    }\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <ClickAwayListener onClickAway={handleClickAway}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </ClickAwayListener>\n\n          <div className='home-title' style={{ display: 'flex', cursor: 'pointer' }} onClick={() => handleMenuChange('home')}>\n            <i className=\"fa fa-terminal\" aria-hidden='true'\n              style={{\n                fontSize: '1.25em', color: 'fffefb',\n                background: 'black', marginTop: '4px', marginBottom: '4px'\n              }} >\n            </i>\n            <Typography variant=\"h4\" noWrap>\n              Home\n            </Typography>\n            <i className=\"fa fa-code\" aria-hidden='true' style={{ fontSize: '1.5em', color: '#19e9e9', marginTop: '8px' }} ></i>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose} >\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key={0} className='menu-icons' onClick={() => handleMenuChange('resume')}>\n            <ListItemIcon >\n              <i className={`fa fa-graduation-cap ${classes.menuIcons}`} aria-hidden='true'  ></i>\n            </ListItemIcon>\n            <ListItemText primary=\"Resume\" color='black' />\n          </ListItem>\n          <Divider />\n          <ListItem button key={2} className='menu-icons' onClick={() => handleMenuChange('cv')}>\n            <ListItemIcon >\n              <VisibilityIcon className={`${classes.menuIcons}`} />\n            </ListItemIcon>\n            <ListItemText primary=\"Computer Vision\" color='black' />\n          </ListItem>\n          <Divider />\n          <ListItem button key={3} className='menu-icons' onClick={() => handleMenuChange('nlp')}>\n            <ListItemIcon >\n              <TranslateIcon className={`${classes.menuIcons}`} />\n            </ListItemIcon>\n            <ListItemText primary=\"NLP\" color='black' />\n          </ListItem>\n          <Divider />\n          <ListItem button key={1} className='menu-icons' onClick={() => handleMenuChange('scatter')}>\n            <ListItemIcon >\n              <ScatterIcon className={`${classes.menuIcons}`} />\n            </ListItemIcon>\n            <ListItemText primary=\"DataViz\" color='black' />\n          </ListItem>\n          <Divider />\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {toggleMenu()}\n      </main>\n    </div >\n  )\n}","import React from 'react'\nimport './App.css'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport * as tfjs from '@tensorflow/tfjs'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}